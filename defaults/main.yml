# SPDX-FileCopyrightText: 2023 Julian-Samuel Geb√ºhr
# SPDX-FileCopyrightText: 2025 Slavi Pantaleev
#
# SPDX-License-Identifier: AGPL-3.0-or-later

---

# Project source code URL: https://github.com/owncast/owncast

owncast_enabled: true

owncast_identifier: owncast

owncast_uid: ''
owncast_gid: ''

# renovate: datasource=docker depName=gabekangas/owncast versioning=semver
owncast_version: 0.2.1

# The hostname at which owncast is served.
owncast_hostname: ''

owncast_base_path: "/{{ owncast_identifier }}"
owncast_data_path: "{{ owncast_base_path }}/data"

owncast_basicauth_enabled: true

owncast_container_image: "{{ owncast_container_image_registry_prefix }}gabekangas/owncast:{{ owncast_container_image_tag }}"
owncast_container_image_registry_prefix: docker.io/
owncast_container_image_tag: "{{ owncast_version }}"
owncast_container_image_force_pull: "{{ owncast_container_image.endswith(':latest') }}"

# The base container network. It will be auto-created by this role if it doesn't exist already.
owncast_container_network: "{{ owncast_identifier }}"

# A list of additional container networks that the container would be connected to.
# The role does not create these networks, so make sure they already exist.
# Use this to expose this container to another reverse proxy, which runs in a different container network.
owncast_container_additional_networks: []

# Specifies the RTMP port. Changing this could make it impossible to connect your streaming software to your server!
#
# Takes an "<ip>:<port>" value (e.g. "127.0.0.1:21027"), just a port number or an empty string to not expose.
owncast_container_rtmp_bind_port: '1935'

# owncast_container_labels_traefik_enabled controls whether labels to assist a Traefik reverse-proxy will be attached to the container.
# See `../templates/labels.j2` for details.
#
# To inject your own other container labels, see `owncast_container_labels_additional_labels`.
owncast_container_labels_traefik_enabled: true
owncast_container_labels_traefik_docker_network: "{{ owncast_container_network }}"
owncast_container_labels_traefik_hostname: "{{ owncast_hostname }}"
owncast_container_labels_traefik_rule: "Host(`{{ owncast_container_labels_traefik_hostname }}`)"
owncast_container_labels_traefik_priority: 0
owncast_container_labels_traefik_entrypoints: web-secure
owncast_container_labels_traefik_tls: "{{ owncast_container_labels_traefik_entrypoints != 'web' }}"
owncast_container_labels_traefik_tls_certResolver: default  # noqa var-naming

# Controls which additional headers to attach to all HTTP requests.
# To add your own custom request headers, use `owncast_container_labels_traefik_additional_response_headers_custom`
owncast_container_labels_traefik_additional_request_headers: "{{ owncast_container_labels_traefik_additional_request_headers_auto | combine(owncast_container_labels_traefik_additional_request_headers_custom) }}"
owncast_container_labels_traefik_additional_request_headers_auto: {}
owncast_container_labels_traefik_additional_request_headers_custom: {}

# Controls which additional headers to attach to all HTTP responses.
# To add your own custom response headers, use `owncast_container_labels_traefik_additional_response_headers_custom`
owncast_container_labels_traefik_additional_response_headers: "{{ owncast_container_labels_traefik_additional_response_headers_auto | combine(owncast_container_labels_traefik_additional_response_headers_custom) }}"
owncast_container_labels_traefik_additional_response_headers_auto: |
  {{
    {}
    | combine ({'X-XSS-Protection': owncast_http_header_xss_protection} if owncast_http_header_xss_protection else {})
    | combine ({'X-Frame-Options': owncast_http_header_frame_options} if owncast_http_header_frame_options else {})
    | combine ({'X-Content-Type-Options': owncast_http_header_content_type_options} if owncast_http_header_content_type_options else {})
    | combine ({'Content-Security-Policy': owncast_http_header_content_security_policy} if owncast_http_header_content_security_policy else {})
    | combine ({'Permission-Policy': owncast_http_header_content_permission_policy} if owncast_http_header_content_permission_policy else {})
    | combine ({'Strict-Transport-Security': owncast_http_header_strict_transport_security} if owncast_http_header_strict_transport_security and owncast_container_labels_traefik_tls else {})
  }}
owncast_container_labels_traefik_additional_response_headers_custom: {}

# owncast_container_labels_additional_labels contains a multiline string with additional labels to add to the container label file.
# See `../templates/labels.j2` for details.
#
# Example:
# owncast_container_labels_additional_labels: |
#   my.label=1
#   another.label="here"
owncast_container_labels_additional_labels: ''

# Specifies how often the container health-check will run.
#
# For Traefik based setups, it's important that the interval is short,
# because the interval value also specifies the "initial wait time".
# This is a Docker (moby) bug: https://github.com/moby/moby/issues/33410
# Without a successful healthcheck, Traefik will not register the service for reverse-proxying.
# Thus, the health interval determines the initial start-up time -- the smaller, the better.
#
# For non-Traefik setups, we use the default healthcheck interval (60s) to decrease overhead.
owncast_container_health_interval: "{{ '5s' if owncast_container_labels_traefik_enabled else '60s' }}"

# Intentionally leaving this blank, instead of defaulting it to `headscale_hostname`, to avoid specifying a hostname
# which could render other services on that hostname potentially unreachable.
# See: https://github.com/mother-of-all-self-hosting/mash-playbook/issues/391
owncast_container_hostname: ''

# A list of additional "volumes" to mount in the container.
# This list gets populated dynamically at runtime. You can provide a different default value,
# if you wish to mount your own files into the container.
# Contains definition objects like this: `{"type": "bind", "src": "/outside", "dst": "/inside", "options": "readonly"}.
# See the `--mount` documentation for the `docker run` command.
owncast_container_additional_volumes: []

# A list of extra arguments to pass to the container
owncast_container_extra_arguments: []

# Additional environment variables.
owncast_environment_variables_additional_variables: ''

# Specifies the value of the `X-XSS-Protection` header
# Stops pages from loading when they detect reflected cross-site scripting (XSS) attacks.
#
# Learn more about it is here:
# - https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-XSS-Protection
# - https://portswigger.net/web-security/cross-site-scripting/reflected
owncast_http_header_xss_protection: "1; mode=block"

# Specifies the value of the `X-Frame-Options` header which controls whether framing can happen.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options
owncast_http_header_frame_options: SAMEORIGIN

# Specifies the value of the `X-Content-Type-Options` header.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Content-Type-Options
owncast_http_header_content_type_options: nosniff

# Specifies the value of the `Content-Security-Policy` header.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy
owncast_http_header_content_security_policy: frame-ancestors 'self'

# Specifies the value of the `Permission-Policy` header.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Permission-Policy
owncast_http_header_content_permission_policy: "{{ 'interest-cohort=()' if owncast_floc_optout_enabled else '' }}"

# Specifies the value of the `Strict-Transport-Security` header.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security
owncast_http_header_strict_transport_security: "max-age=31536000; includeSubDomains{{ '; preload' if owncast_hsts_preload_enabled else '' }}"

# Controls whether to send a "Permissions-Policy interest-cohort=();" header along with all responses
#
# Learn more about what it is here:
# - https://www.eff.org/deeplinks/2021/03/googles-floc-terrible-idea
# - https://paramdeo.com/blog/opting-your-website-out-of-googles-floc-network
# - https://amifloced.org/
#
# Of course, a better solution is to just stop using browsers (like Chrome), which participate in such tracking practices.
# See: `owncast_content_permission_policy`
owncast_floc_optout_enabled: true

# Controls if HSTS preloading is enabled
#
# In its strongest and recommended form, the [HSTS policy](https://www.chromium.org/hsts) includes all subdomains, and
# indicates a willingness to be "preloaded" into browsers:
# `Strict-Transport-Security: max-age=31536000; includeSubDomains; preload`
# For more information visit:
# - https://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security
# - https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security
# - https://hstspreload.org/#opt-in
# See: `owncast_http_header_strict_transport_security`
owncast_hsts_preload_enabled: false

# List of systemd services that owncast.service depends on
owncast_systemd_required_services_list: ['docker.service']
